name: Airflow-setup
on:
  push:
    branches: [ main ]

jobs:
  airflow-setup-job:
    runs-on: ubuntu-latest
    env:
      E2E_USER: ${{ secrets.E2E_USER }}
      E2E_PASSWD: ${{ secrets.E2E_PASSWD }}
      E2E_ADDRESS: ${{ secrets.E2E_ADDRESS }}
      AIRFLOW_USER: ${{ secrets.AIRFLOW_USER}}
      AIRFLOW_PASSWD: ${{ secrets.AIRFLOW_PASSWD }}
    steps:
      - run: ls -la
      - run: pwd
      - run: 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
      - run: eval $(ssh-agent -s)
      - run: mkdir -p ~/.ssh
      - run: chmod 700 ~/.ssh
      - run: echo "${{ secrets.SSH_KEY }}" >> ~/.ssh/ssh-key.pem
      - run: chmod 400 ~/.ssh/ssh-key.pem
      - run: cat ~/.ssh/ssh-key.pem
      - run: echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - run: sudo apt-get install sshpass -y
      - run: sudo apt-get update -y
      - run: sudo apt-get -y install rsync
      - run: |
          ssh -i ~/.ssh/ssh-key.pem ${{ secrets.E2E_USER }}@${{ secrets.E2E_ADDRESS }} \
          'git config --global --replace-all user.name "Akash J" && git config --global --replace-all user.email "akash.jena@krtrimaiq.ai"'
      - run: |
          ssh -i ~/.ssh/ssh-key.pem ${{ secrets.E2E_USER }}@${{ secrets.E2E_ADDRESS }} \
          'if [ -d airflow-pipeline ]; then cd airflow-pipeline && git status && git restore .env && git pull --rebase && git status && sed -i s:%AIRFLOW_UID%:'"$(id -u)"':g .env && sed -i s:%AIRFLOW_GID%:0:g .env && sed -i s:%_AIRFLOW_WWW_USER_USERNAME%:'"${{ secrets.AIRFLOW_USER}}"':g .env && sed -i s:%_AIRFLOW_WWW_USER_PASSWORD%:'"${{ secrets.AIRFLOW_PASSWD }}"':g .env else git clone https://'"${{ secrets.GITHUB_TOKEN }}"'@github.com/akash-jena/airflow-pipeline.git && cd airflow-pipeline && ls -la && chmod 777 logs && sed -i s:%AIRFLOW_UID%:'"$(id -u)"':g .env && sed -i s:%AIRFLOW_GID%:0:g .env && sed -i s:%_AIRFLOW_WWW_USER_USERNAME%:'"${{ secrets.AIRFLOW_USER}}"':g .env && sed -i s:%_AIRFLOW_WWW_USER_PASSWORD%:'"${{ secrets.AIRFLOW_PASSWD }}"':g .env && docker-compose up airflow-init; fi'
      - run: |
          ssh -i ~/.ssh/ssh-key.pem ${{ secrets.E2E_USER }}@${{ secrets.E2E_ADDRESS }} \
          cd airflow-pipeline &&
          if [ docker ps | grep -q keyword ]; 
          then docker-compose down && docker-compose up -d --build; 
          else docker-compose up -d --build; 
          fi;


